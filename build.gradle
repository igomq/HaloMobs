plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '5.1.0'
}

group 'me.gomq.halomobs'
version '0.2.1'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

repositories {
    mavenCentral()
    mavenLocal()

    maven { url = 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url = 'https://oss.sonatype.org/content/repositories/central' }
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

    implementation 'org.bukkit:patched_1.16.5:1.16.5'
}

jar {
    finalizedBy shadowJar

    manifest {
        attributes 'Main-Class': 'me.gomq.halomobs.HaloMobs'
    }
    from {
        configurations.runtimeClasspath.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}

task createProperties(dependsOn: processResources) {
    doLast {
        new File("$buildDir/resources/main/version.properties").withWriter { w ->
            Properties p = new Properties()
            p['version'] = project.version.toString()
            p.store w, null
        }
    }
}

classes {
    dependsOn createProperties
}

processResources {
    filesMatching("**/*.yml") {
        expand(project.properties)
    }
}

test {
    useJUnitPlatform()
}